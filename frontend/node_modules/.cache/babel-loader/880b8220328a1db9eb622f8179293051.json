{"ast":null,"code":"// Helper untuk fetch GraphQL\nexport async function graphqlFetch(url, query, variables = {}) {\n  const res = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  });\n  const json = await res.json();\n  if (json.errors) throw new Error(json.errors.map(e => e.message).join(', '));\n  return json.data;\n}","map":{"version":3,"names":["graphqlFetch","url","query","variables","res","fetch","method","headers","body","JSON","stringify","json","errors","Error","map","e","message","join","data"],"sources":["D:/Johan/EAI/iea_healt_care/iea_healt_care/tugas_uts/tugas_uts/New folder/Healt-care-app/frontend/src/utils/graphql.js"],"sourcesContent":["// Helper untuk fetch GraphQL\nexport async function graphqlFetch(url, query, variables = {}) {\n  const res = await fetch(url, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({ query, variables }),\n  });\n  const json = await res.json();\n  if (json.errors) throw new Error(json.errors.map(e => e.message).join(', '));\n  return json.data;\n}\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,YAAYA,CAACC,GAAG,EAAEC,KAAK,EAAEC,SAAS,GAAG,CAAC,CAAC,EAAE;EAC7D,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAE;IAC3BK,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAER,KAAK;MAAEC;IAAU,CAAC;EAC3C,CAAC,CAAC;EACF,MAAMQ,IAAI,GAAG,MAAMP,GAAG,CAACO,IAAI,CAAC,CAAC;EAC7B,IAAIA,IAAI,CAACC,MAAM,EAAE,MAAM,IAAIC,KAAK,CAACF,IAAI,CAACC,MAAM,CAACE,GAAG,CAACC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC,CAAC;EAC5E,OAAON,IAAI,CAACO,IAAI;AAClB","ignoreList":[]},"metadata":{},"sourceType":"module"}