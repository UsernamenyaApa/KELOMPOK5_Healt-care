{"ast":null,"code":"var _jsxFileName = \"D:\\\\Telkom University\\\\SMT 6\\\\iea_healt_care\\\\tugas_uts\\\\tugas_uts\\\\New folder\\\\Healt-care-app\\\\frontend\\\\src\\\\pages\\\\Doctors.js\";\nimport React, { useEffect, useState } from 'react';\nimport './Doctors.css';\nimport { useNavigate } from 'react-router-dom';\nimport { graphqlFetch } from '../utils/graphql';\nimport Medicine from './Medicine';\nconst DOCTOR_GQL = 'http://localhost:8002/graphql';\nconst Doctors = () => {\n  const [doctors, setDoctors] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [appointments, setAppointments] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const doctorQuery = `query { doctors { id name specialization } }`;\n    graphqlFetch(DOCTOR_GQL, doctorQuery).then(data => setDoctors(data.doctors));\n  }, []);\n  const handleBook = doctor => {\n    navigate('/appointments', {\n      state: {\n        specialization: doctor.specialization,\n        doctor_id: doctor.id\n      }\n    });\n  };\n  const handleSelect = doc => {\n    setSelected(doc);\n    const apptQuery = `query($doctorId: Int!) { doctorAppointments(doctorId: $doctorId) { id patient_id schedule } }`;\n    graphqlFetch(DOCTOR_GQL, apptQuery, {\n      doctorId: doc.id\n    }).then(data => setAppointments(data.doctorAppointments));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctors-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, \"Daftar Dokter\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctors-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, doctors.map(doc => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"doctor-card\",\n    key: doc.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 16\n    }\n  }, doc.name)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, doc.specialization), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleBook(doc),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, \"Buat Appointment\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleSelect(doc),\n    style: {\n      marginLeft: 8\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Lihat Appointment\"), selected && selected.id === doc.id && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"appointment-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, \"Appointment\"), appointments.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 34\n    }\n  }, \"Tidak ada appointment.\") : appointments.map(a => /*#__PURE__*/React.createElement(\"div\", {\n    key: a.id,\n    className: \"appointment-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, \"Pasien ID:\"), \" \", a.patient_id), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }\n  }, \"Jadwal:\"), \" \", a.schedule), /*#__PURE__*/React.createElement(Medicine, {\n    appointmentId: a.id,\n    isDoctor: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }))))))));\n};\nexport default Doctors;","map":{"version":3,"names":["React","useEffect","useState","useNavigate","graphqlFetch","Medicine","DOCTOR_GQL","Doctors","doctors","setDoctors","selected","setSelected","appointments","setAppointments","navigate","doctorQuery","then","data","handleBook","doctor","state","specialization","doctor_id","id","handleSelect","doc","apptQuery","doctorId","doctorAppointments","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","key","name","onClick","style","marginLeft","length","a","patient_id","schedule","appointmentId","isDoctor"],"sources":["D:/Telkom University/SMT 6/iea_healt_care/tugas_uts/tugas_uts/New folder/Healt-care-app/frontend/src/pages/Doctors.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './Doctors.css';\nimport { useNavigate } from 'react-router-dom';\nimport { graphqlFetch } from '../utils/graphql';\nimport Medicine from './Medicine';\n\nconst DOCTOR_GQL = 'http://localhost:8002/graphql';\n\nconst Doctors = () => {\n  const [doctors, setDoctors] = useState([]);\n  const [selected, setSelected] = useState(null);\n  const [appointments, setAppointments] = useState([]);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const doctorQuery = `query { doctors { id name specialization } }`;\n    graphqlFetch(DOCTOR_GQL, doctorQuery).then(data => setDoctors(data.doctors));\n  }, []);\n\n  const handleBook = (doctor) => {\n    navigate('/appointments', { state: { specialization: doctor.specialization, doctor_id: doctor.id } });\n  };\n\n  const handleSelect = (doc) => {\n    setSelected(doc);\n    const apptQuery = `query($doctorId: Int!) { doctorAppointments(doctorId: $doctorId) { id patient_id schedule } }`;\n    graphqlFetch(DOCTOR_GQL, apptQuery, { doctorId: doc.id }).then(data => setAppointments(data.doctorAppointments));\n  };\n\n\n  return (\n    <div className=\"doctors-section\">\n      <h2>Daftar Dokter</h2>\n      <div className=\"doctors-list\">\n        {doctors.map(doc => (\n          <div className=\"doctor-card\" key={doc.id}>\n            <p><b>{doc.name}</b></p>\n            <p>{doc.specialization}</p>\n            <button onClick={() => handleBook(doc)}>Buat Appointment</button>\n            <button onClick={() => handleSelect(doc)} style={{ marginLeft: 8 }}>Lihat Appointment</button>\n            {selected && selected.id === doc.id && (\n  <div className=\"appointment-list\">\n    <h4>Appointment</h4>\n    {appointments.length === 0 ? <p>Tidak ada appointment.</p> : appointments.map(a => (\n      <div key={a.id} className=\"appointment-card\">\n        <p><b>Pasien ID:</b> {a.patient_id}</p>\n        <p><b>Jadwal:</b> {a.schedule}</p>\n        {/* Komponen resep/obat untuk dokter */}\n        <Medicine appointmentId={a.id} isDoctor={true} />\n      </div>\n    ))}\n  </div>\n)}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Doctors;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AAEjC,MAAMC,UAAU,GAAG,+BAA+B;AAElD,MAAMC,OAAO,GAAGA,CAAA,KAAM;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,8CAA8C;IAClEX,YAAY,CAACE,UAAU,EAAES,WAAW,CAAC,CAACC,IAAI,CAACC,IAAI,IAAIR,UAAU,CAACQ,IAAI,CAACT,OAAO,CAAC,CAAC;EAC9E,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,UAAU,GAAIC,MAAM,IAAK;IAC7BL,QAAQ,CAAC,eAAe,EAAE;MAAEM,KAAK,EAAE;QAAEC,cAAc,EAAEF,MAAM,CAACE,cAAc;QAAEC,SAAS,EAAEH,MAAM,CAACI;MAAG;IAAE,CAAC,CAAC;EACvG,CAAC;EAED,MAAMC,YAAY,GAAIC,GAAG,IAAK;IAC5Bd,WAAW,CAACc,GAAG,CAAC;IAChB,MAAMC,SAAS,GAAG,+FAA+F;IACjHtB,YAAY,CAACE,UAAU,EAAEoB,SAAS,EAAE;MAAEC,QAAQ,EAAEF,GAAG,CAACF;IAAG,CAAC,CAAC,CAACP,IAAI,CAACC,IAAI,IAAIJ,eAAe,CAACI,IAAI,CAACW,kBAAkB,CAAC,CAAC;EAClH,CAAC;EAGD,oBACE5B,KAAA,CAAA6B,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9BpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,eAAiB,CAAC,eACtBpC,KAAA,CAAA6B,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC1B5B,OAAO,CAAC6B,GAAG,CAACZ,GAAG,iBACdzB,KAAA,CAAA6B,aAAA;IAAKC,SAAS,EAAC,aAAa;IAACQ,GAAG,EAAEb,GAAG,CAACF,EAAG;IAAAQ,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACvCpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAGpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIX,GAAG,CAACc,IAAQ,CAAI,CAAC,eACxBvC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAIX,GAAG,CAACJ,cAAkB,CAAC,eAC3BrB,KAAA,CAAA6B,aAAA;IAAQW,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAACO,GAAG,CAAE;IAAAM,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,kBAAwB,CAAC,eACjEpC,KAAA,CAAA6B,aAAA;IAAQW,OAAO,EAAEA,CAAA,KAAMhB,YAAY,CAACC,GAAG,CAAE;IAACgB,KAAK,EAAE;MAAEC,UAAU,EAAE;IAAE,CAAE;IAAAX,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,mBAAyB,CAAC,EAC7F1B,QAAQ,IAAIA,QAAQ,CAACa,EAAE,KAAKE,GAAG,CAACF,EAAE,iBAC7CvB,KAAA,CAAA6B,aAAA;IAAKC,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC/BpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,aAAe,CAAC,EACnBxB,YAAY,CAAC+B,MAAM,KAAK,CAAC,gBAAG3C,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,wBAAyB,CAAC,GAAGxB,YAAY,CAACyB,GAAG,CAACO,CAAC,iBAC7E5C,KAAA,CAAA6B,aAAA;IAAKS,GAAG,EAAEM,CAAC,CAACrB,EAAG;IAACO,SAAS,EAAC,kBAAkB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC1CpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAGpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,YAAa,CAAC,KAAC,EAACQ,CAAC,CAACC,UAAc,CAAC,eACvC7C,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAAGpC,KAAA,CAAA6B,aAAA;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,SAAU,CAAC,KAAC,EAACQ,CAAC,CAACE,QAAY,CAAC,eAElC9C,KAAA,CAAA6B,aAAA,CAACxB,QAAQ;IAAC0C,aAAa,EAAEH,CAAC,CAACrB,EAAG;IAACyB,QAAQ,EAAE,IAAK;IAAAjB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC7C,CACN,CACE,CAEQ,CACN,CACE,CACF,CAAC;AAEV,CAAC;AAED,eAAe7B,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}